<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd"> <!-- bean definitions here -->



    <!--配置目标类-->
    <bean id="productDao" class="com.flyz.demo3.ProductDaoImpl"></bean>
    <bean id="myAspectXml" class="com.flyz.demo3.MyAspectXml"></bean>
    <aop:config>
        <!--表达式配置那些类的那些方法需要进行增强-->
        <aop:pointcut id="pointCut1" expression="execution(* com.flyz.demo3.ProductDaoImpl.save(..))"/>
        <aop:pointcut id="pointCut2" expression="execution(* com.flyz.demo3.ProductDaoImpl.delete(..))"/>
        <aop:pointcut id="pointCut3" expression="execution(* com.flyz.demo3.ProductDaoImpl.update(..))"/>
        <aop:pointcut id="pointCut4" expression="execution(* com.flyz.demo3.ProductDaoImpl.find(..))"/>
        <!--配置切面-->
        <aop:aspect ref="myAspectXml">
            <!--前置通知-->
            <aop:before method="checkPri" pointcut-ref="pointCut1"/>
            <!--后置通知,带返回值-->
            <aop:after-returning method="writeLog" pointcut-ref="pointCut2" returning="result"/>
            <!--环绕通知-->
            <aop:around method="around" pointcut-ref="pointCut3"/>
            <!--异常抛出通知-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointCut4" throwing="ex"/>
            <!--最终通知,无论有么有异常,最终通知都会被执行-->
            <aop:after method="after" pointcut-ref="pointCut4"/>
        </aop:aspect>


    </aop:config>
</beans>